module DiscordBot
  module MeloTTS
    ##
    # Holds the image generated by Stable Diffusion
    #
    class Voice
      # rubocop:disable Metrics/MethodLength
      def initialize(voice_options:)
        @options = voice_options
        time_before = Time.current
        response = DiscordBot::MeloTTS::ApiRequest.text_to_voice(
          voice_options: voice_options
        )
        time_after = Time.current
        @time_taken = time_after - time_before
        @content = response.body
      end
      # rubocop:enable Metrics/MethodLength

      attr_reader :content, :options, :time_taken

      def file
        return unless content.present?

        StringIO.new(content)
      end

      def tempfile
        return unless content.present?

        Tempfile.create(['voice', 'wav'], binmode: true) do |file|
          file.write(content)
          yield file
        end
      end

      private

      def time_taken
        "**Time Taken:** #{@time_taken.round} seconds " \
        "(#{(@time_taken * 1000).round}ms)"
      end
    end
  end
end
